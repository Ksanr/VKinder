from datetime import datetime
from dotenv import load_dotenv
import os, logging

from models import Users, Interests, UsersInterest, BlackList, Favorites, Photos, Matches, Gender
from sqlalchemy import create_engine
from sqlalchemy.orm import declarative_base, sessionmaker

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
load_dotenv()
Base = declarative_base()
engine = create_engine(os.getenv('DB_URL'))
SessionLocal = sessionmaker(bind=engine)
session = SessionLocal()

logger = logging.getLogger(__name__)
def get_user(user_id: int):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –û–±—ä–µ–∫—Ç Users
    """
    try:
        # user = session.query(Users).filter_by(id_VK_user=user_id).first()
        user = session.get(Users, user_id)
        return user
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}')

def create_new_user(user_id: int, name: str = None, surname: str = None,
                    age: int = None, gender: Gender = None, city: str = None):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param name: –∏–º—è
    :param surname: —Ñ–∞–º–∏–ª–∏—è
    :param age: –≤–æ–∑—Ä–∞—Å—Ç
    :param gender: –ø–æ–ª
    :param city: –≥–æ—Ä–æ–¥
    :return:
    """
    try:
        # –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–∑ –í–ö
        # if not all((name, surname, age, gender, city)):
        #     print(user_id)
        #     vk_user = VKBot.get_user_info(user_id)
        # name = name or vk_user['first_name']
        # surname = surname or vk_user['last_name']
        # age = age or vk_user['age']
        # gender = gender or vk_user['sex']
        # city = city or vk_user['city']

        user = get_user(user_id)
        if user:
            return f'‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id:{user_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î'

        new_user = Users(id_VK_user=user_id, name=name, surname=surname, age=age,
                         gender=gender, city=city)
        session.add(new_user)
        session.commit()
        return '‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')


def update_user(user_id: int, name: str = None, surname: str = None,
                    age: int = None, gender: str = None, city: str = None):
    """
    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param name: –∏–º—è
    :param surname: —Ñ–∞–º–∏–ª–∏—è
    :param age: –≤–æ–∑—Ä–∞—Å—Ç
    :param gender: –ø–æ–ª
    :param city: –≥–æ—Ä–æ–¥
    :return:
    """
    try:
        user = get_user(user_id)
        if not user:
            return f'üòî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id:{user_id} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î'

        if name: user.name = name
        if surname: user.surname=surname
        if age: user.age = age
        if gender: user.gender = gender
        if city: user.city = city
        session.add(user)
        session.commit()
        return '‚úÖ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')

def get_favorites(user_id: int):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞
    :return:
    """
    try:
        users = (session.query(Favorites.id_target)
                 .filter_by(id_VK_user=user_id).all())
        if users:
            return users
        return 'üìã –í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É—Å—Ç'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {e}')

def add_favorite(user_id: int, target_id: int):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param target_id: ID –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
    try:
        if target_id in get_favorites(user_id):
            return '‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!'
        # –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ
        # user = get_user(target_id)
        # if not user:
        #     # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –í–ö
        #     user = VKBot.get_user_info(target_id)
        #     create_new_user(user['id'], user['first_name'], user['last_name'],
        #                     user['age'], user['sex'], user['city'])

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
        new_favorite = Favorites(id_VK_user=user_id, id_target=target_id)
        session.add(new_favorite)
        session.commit()
        return '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {e}')

def get_blacklist(user_id: int):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞
    :return:
    """
    try:
        users = (session.query(BlackList.id_blocked)
                 .filter_by(id_VK_user=user_id)
                 .all())
        if users:
            return users
        return 'üìã –í–∞—à —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}')

def add_blacklist(user_id: int, blocked_id: int):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param blocked_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    :return:
    """
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
    try:
        if blocked_id in get_blacklist(user_id):
            return '‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!'
        # –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ß–° –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ
        # user = get_user(blocked_id)
        # if not user:
        #     # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –¥–æ–±–∞–≤–ª—è–µ–º–æ–º –≤ –ß–°
        #     user = VKBot.get_user_info(blocked_id)
        #     create_new_user(user['id'], user['first_name'], user['last_name'],
        #                     user['age'], user['sex'], user['city'])

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
        new_black_user = BlackList(id_VK_user=user_id, id_blocked=blocked_id)
        session.add(new_black_user)
        session.commit()
        return '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {e}')

def get_photo(user_id: int, count: int = 3):
    """
    –≤—ã–∑–æ–≤ —Ñ–æ—Ç–æ –∏–∑ –ë–î
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param count: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    :return:
    """
    try:
        photos = (session.query(Photos.url)
                  .filter_by(id_VK_user=user_id)
                  .order_by(Photos.likes)
                  .limit(count)
                  .all())
        return photos
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}')

def add_photo(user_id: int, url: str, likes: int, is_profile_photo: bool):
    """
    —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ –ë–î
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param url: url —Ñ–æ—Ç–æ
    :param likes: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
    :param is_profile_photo: —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    :return:
    """
    try:
        new_photo = Photos(id_VK_user=user_id, url=url, likes=likes,
                           is_profile_photo=is_profile_photo)
        session.add(new_photo)
        session.commit()
        return '‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}')

def get_match(user_id: int):
    """
    –≤—ã–∑–æ–≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏–∑ –ë–î
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    try:
        match = (session.query(Matches)
                 .filter(Matches.id_VK_user == user_id, Matches.match_shown == False or Matches.match_shown == None)
                 .first())
        if match:
            match.match_shown = True
            session.add(match)
            session.commit()
            return match
        return 'üòî –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å.'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {e}')

def add_match(user_id: int, target_id: int, matched_at: datetime = None,
              match_shown: bool = False):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –ë–î
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param target_id: ID —Å–æ–≤–ø–∞–¥–∞—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param matched_at: –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    :param match_shown: –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏
    :return:
    """
    try:
        if not matched_at:
            matched_at = datetime.now()
        new_match = Matches(id_VK_user=user_id, id_target_user=target_id,
                            matched_at=matched_at)
        session.add(new_match)
        session.commit()
        return '‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è: {e}')

def get_interest(id_interest: int = None, interest_name : str = None):
    """
    –í—ã–∑–æ–≤ –Ω–∞–∑–≤–∞–Ω–∏—è/ID –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :param id_interest: ID –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :param interest_name: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :return:
    """
    try:
        if id_interest:
            # interest = (session.query(Interests.interest_name)
            #             .filter_by(id_interest=id_interest)
            #             .first())
            interest = session.get(Interests.interest_name, id_interest)
            if interest:
                return interest[0]
            return 'üòî –ò–Ω—Ç–µ—Ä–µ—Å–∞ –ø–æ ID –Ω–µ –Ω–∞—à–ª–æ—Å—å.'
        interest = (session.query(Interests.id_interest)
                    .filter_by(interest_name=interest_name)
                    .first())
        if interest:
            return interest[0]
        return 'üòî –ò–Ω—Ç–µ—Ä–µ—Å–∞ –ø–æ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞—à–ª–æ—Å—å.'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞: {e}')

def add_interest(interest_name: str):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –≤ –ë–î
    :param interest_name: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :return:
    """
    try:
        if get_interest(interest_name=interest_name):
            return '‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î'
        new_interest = Interests(interest_name=interest_name)
        session.add(new_interest)
        session.commit()
        return '‚úÖ –ò–Ω—Ç–µ—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞: {e}')

def get_user_interest(user_id: int):
    """
    –í—ã–∑–æ–≤ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    try:
        interests = (session.query(Interests.interest_name)
                     .join(UsersInterest).
                     filter(UsersInterest.id_VK_user == user_id).
                     all())
        if interests:
            interests_list = [i[0] for i in interests]
            return interests_list
        return 'üòî –£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –Ω–µ –Ω–∞—à–ª–æ—Å—å.'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')

def add_user_interest(user_id: int, id_interest: int = None,
                      interest_name: str = None):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param id_interest: ID –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :param interest_name: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    :return:
    """
    if not (id_interest or interest_name):
        return 'üòî –ù–µ —É–∫–∞–∑–∞–Ω—ã ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞.'
    try:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è ID –∏–Ω—Ç–µ—Ä–µ—Å–∞ –≤ –ë–î
        if id_interest and 'üòî' in get_interest(id_interest):
            return 'üòî –ò–Ω—Ç–µ—Ä–µ—Å–∞ —Å —Ç–∞–∫–∏–º ID –≤ –ë–î –Ω–µ—Ç. –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ'
        if interest_name:
            id_interest = get_interest(interest_name=interest_name)
            if not isinstance(id_interest, int):
                add_interest(interest_name)
                id_interest = get_interest(interest_name=interest_name)
        else:
            interest_name = get_interest(id_interest)
        old_interests = get_user_interest(user_id)
        print(old_interests, id_interest, interest_name)
        if 'üòî' not in old_interests and interest_name in old_interests:
            return  '‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –ë–î'
        new_interest = UsersInterest(id_VK_user=user_id, id_interest=id_interest)
        session.add(new_interest)
        session.commit()
        return '‚úÖ –ò–Ω—Ç–µ—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î'
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')

def find_match(user_id: int):
    """
    –ü–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    try:
        # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user = get_user(user_id)
        if not user:
            return 'üòî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ'

        # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_interests = get_user_interest(user_id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
        search_sex = (Gender.VALUE_TWO, Gender.VALUE_ONE)[user.gender == Gender.VALUE_TWO]
        age_from = max(18, user.age - 5) if user.age else 18
        age_to = min(80, user.age + 5) if user.age else 35
        city = user.city

        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —É—á—ë—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
        found_users = session.query(Users).filter(Users.gender == search_sex,
                                                  Users.age >= age_from,
                                                  Users.age <= age_to,
                                                  Users.city == city).all()
        if not found_users:
            return 'üòî –ù–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'

        # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ö–æ–∂–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏
        if 'üòî' in user_interests:
            interest_users = found_users
        else:
            interest_users = []
            for found_user in found_users:
                for found_user_interest in get_user_interest(found_user.id_VK_user):
                    if found_user_interest in user_interests:
                        interest_users.append(found_user)
                        break

        if not interest_users:
            return 'üòî –° –í–∞—à–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–î
        for found_user in interest_users: # –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —É—á—ë—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∑–∞–º–µ–Ω–∏–≤ interest_users –Ω–∞ found_users
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π, —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ
            match = session.query(Matches).filter(Matches.id_VK_user == user_id,
                                                  Matches.id_target_user == found_user.id_VK_user).first()
            if not match:
                add_match(user_id, found_user.id_VK_user, datetime.now(), False)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        return get_match(user_id)
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {e}')

def get_user_full_info(user_id: int):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return:
    """
    try:
        user = get_user(user_id)
        photos = get_photo(user_id)
        interests = get_user_interest(user_id)

        return {'id_VK_user': user_id,
                'name': user.name,
                'surname': user.surname,
                'age': user.age,
                'gender': user.gender,
                'city': user.city,
                'photos': photos,
                'interests': interests
                }
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}')
        raise ValueError(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}')



def test_bd():
    print(create_new_user(10, '–ò–≤–∞–Ω', '–ò–≤–∞–Ω–æ–≤', 33,
                          Gender.VALUE_ONE, '–ú–æ—Å–∫–≤–∞'))
    print(create_new_user(11, '–ü–µ—Ç—Ä', '–ü–µ—Ç—Ä–æ–≤', 20,
                          Gender.VALUE_ONE, '–ú–æ—Å–∫–≤–∞'))
    print(create_new_user(12, '–ê—Å—è', '–°–∏–¥–æ—Ä–æ–≤–∞', 30,
                          Gender.VALUE_TWO, '–ú–æ—Å–∫–≤–∞'))
    print(create_new_user(13, '–í–µ—Ä–∞', '–í–æ—Ä–æ–Ω–∏–Ω–∞', 19,
                          Gender.VALUE_TWO, '–ú–æ—Å–∫–≤–∞'))
    print(create_new_user(14, '–ö–∞—Ç—è', '–ö–∞—Ç–∏–Ω–∞', 29,
                          Gender.VALUE_TWO, '–ö–∞–∑–∞–Ω—å'))

    for id in range(10, 15):
        print(get_user(id))

    interests = ('—Ä–∏—Å–æ–≤–∞–Ω–∏–µ', '–ø–æ—Ö–æ–¥', '—Ç–∞–Ω—Ü—ã')
    for interest in interests:
        print(add_interest(interest))

    for interest in interests:
        print(get_interest(interest_name=interest))

    print(add_user_interest(10, interest_name='—Ä–∏—Å–æ–≤–∞–Ω–∏–µ'))
    print(add_user_interest(10, interest_name='–ø–æ—Ö–æ–¥'))
    print(add_user_interest(12, interest_name='–ø–æ—Ö–æ–¥'))

    for id in range(10, 15):
        print(get_user_full_info(id))

    print('**************** –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è *********')
    for id in range(10, 15):
        print(find_match(id))

    print(update_user(11, city='–ö–∞–∑–∞–Ω—å'))
    print(get_user_full_info(11))
    print(get_user_full_info(14))

    print('**************** –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è *********')
    for id in range(10, 15):
        print(find_match(id))



if __name__ == '__main__':
    test_bd()


# def write_msg(user_id, message):
#     vk.method('messages.send', {'user_id': user_id, 'message': message,  'random_id': randrange(10 ** 7),})
#

# from random import randrange
# import vk_api
# from vk_api.longpoll import VkLongPoll, VkEventType

# TOKEN = os.getenv('VK_GROUP_TOKEN')
# vk = vk_api.VkApi(token=TOKEN)
# longpoll = VkLongPoll(vk)



# if __name__ == '__main__':
#     for event in longpoll.listen():
#         if event.type == VkEventType.MESSAGE_NEW:
#
#             if event.to_me:
#                 request = event.text
#                 user = get_user(event.user_id)
#                 if not user:
#                     create_new_user(event.user_id)
#
#                     write_msg(event.user_id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {event.user_id}, –≤ –±–æ—Ç–µ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤')
#                     print(f'–í –ë–î –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {event.user_id}')
#                 elif request == "–ø—Ä–∏–≤–µ—Ç":
#                     write_msg(event.user_id, f"–•–∞–π, {event.user_id}")
#                 elif request == "–ø–æ–∫–∞":
#                     write_msg(event.user_id, "–ü–æ–∫–∞((")
#                 else:
#                     write_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...")